[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/should-nebraska-worry-about-starting-a-freshman-quarterback/index.html",
    "href": "posts/should-nebraska-worry-about-starting-a-freshman-quarterback/index.html",
    "title": "What is Nebraska Football’s Ceiling with Freshman Quarterback at the Helm?",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nCode\nlibrary(ggrepel)\nlibrary(ggbeeswarm)\nlibrary(ggalt)\n\n\nRegistered S3 methods overwritten by 'ggalt':\n  method                  from   \n  grid.draw.absoluteGrob  ggplot2\n  grobHeight.absoluteGrob ggplot2\n  grobWidth.absoluteGrob  ggplot2\n  grobX.absoluteGrob      ggplot2\n  grobY.absoluteGrob      ggplot2\n\n\nCode\nset.seed(1234)\n\n\n\n\nCode\npassing23 &lt;- read_csv(\"qb23.csv\") |&gt; mutate(Season = 2023, PlayerSeason = paste(Name, Season))\n\n\nRows: 100 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (4): Name, Team, Year, Pos\ndbl (11): Games, Att, Comp, Pct, Yards, Yards/Att, TD, Int, Rating, Att/G, Y...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\npassing22 &lt;- read_csv(\"qb22.csv\") |&gt; mutate(Season = 2022, PlayerSeason = paste(Name, Season))\n\n\nRows: 100 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (4): Name, Team, Year, Pos\ndbl (11): Games, Att, Comp, Pct, Yards, Yards/Att, TD, Int, Rating, Att/G, Y...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\npassing21 &lt;- read_csv(\"qb21.csv\") |&gt; mutate(Season = 2021, PlayerSeason = paste(Name, Season))\n\n\nRows: 100 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (4): Name, Team, Year, Pos\ndbl (11): Games, Att, Comp, Pct, Yards, Yards/Att, TD, Int, Rating, Att/G, Y...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\npassing20 &lt;- read_csv(\"qb20.csv\") |&gt; mutate(Season = 2020, PlayerSeason = paste(Name, Season))\n\n\nRows: 100 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (4): Name, Team, Year, Pos\ndbl (11): Games, Att, Comp, Pct, Yards, Yards/Att, TD, Int, Rating, Att/G, Y...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\npassing19 &lt;- read_csv(\"qb19.csv\") |&gt; mutate(Season = 2019, PlayerSeason = paste(Name, Season))\n\n\nRows: 100 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (4): Name, Team, Year, Pos\ndbl (11): Games, Att, Comp, Pct, Yards, Yards/Att, TD, Int, Rating, Att/G, Y...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\npassing18 &lt;- read_csv(\"qb18.csv\") |&gt; mutate(Season = 2018, PlayerSeason = paste(Name, Season))\n\n\nRows: 100 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (4): Name, Team, Year, Pos\ndbl (11): Games, Att, Comp, Pct, Yards, Yards/Att, TD, Int, Rating, Att/G, Y...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\npassing17 &lt;- read_csv(\"qb17.csv\") |&gt; mutate(Season = 2017, PlayerSeason = paste(Name, Season))\n\n\nRows: 100 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (4): Name, Team, Year, Pos\ndbl (11): Games, Att, Comp, Pct, Yards, Yards/Att, TD, Int, Rating, Att/G, Y...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\npassing16 &lt;- read_csv(\"qb16.csv\") |&gt; mutate(Season = 2016, PlayerSeason = paste(Name, Season))\n\n\nRows: 100 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (4): Name, Team, Year, Pos\ndbl (11): Games, Att, Comp, Pct, Yards, Yards/Att, TD, Int, Rating, Att/G, Y...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\npassing15 &lt;- read_csv(\"qb15.csv\") |&gt; mutate(Season = 2015, PlayerSeason = paste(Name, Season))\n\n\nRows: 100 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (4): Name, Team, Year, Pos\ndbl (11): Games, Att, Comp, Pct, Yards, Yards/Att, TD, Int, Rating, Att/G, Y...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\npassing14 &lt;- read_csv(\"qb14.csv\") |&gt; mutate(Season = 2014, PlayerSeason = paste(Name, Season))\n\n\nRows: 100 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (4): Name, Team, Year, Pos\ndbl (11): Games, Att, Comp, Pct, Yards, Yards/Att, TD, Int, Rating, Att/G, Y...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\npassing &lt;- bind_rows(passing23, passing22, passing21, passing20, passing19, passing18, passing17, passing16, passing15, passing14)\n\n\n\n\nCode\nFreshmen &lt;- passing|&gt;\n  filter(Year == \"FR\")\n\npassing_ratio &lt;- passing |&gt;\n  group_by(Year) |&gt;\n  summarise(\n    Interceptions = mean(Int),\n    Touchdowns = mean(TD),\n  )\n  \npassing_av &lt;- passing |&gt;\n  group_by(Year) |&gt;\n  summarise(\n    Completions = mean(Comp),\n    Attempts = mean(Att),\n  )|&gt;\n  pivot_longer(\n    cols = -Year,\n    names_to = \"Stat\",\n    values_to = \"Total\"\n  )\n\n\n\n\nCode\nggplot() + \n  geom_point(data=passing, aes(x=Att, y=Yards), color=\"grey\") +\n  geom_point(data=Freshmen, aes(x=Att, y=Yards), color=\"red\") +\nlabs(\n    x=\"Total Attempted Pass\", \n    y=\"Total Yards\", \n    title=\"What's the Best-Case Scenario?\", \n    subtitle=\"Nebraska would need a freshman to compete at the level of future top draft pics.\", \n    caption=\"Source: cfbstats.com | By Taylor Kumm\") + \n  theme_minimal() + \n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 8), \n    plot.subtitle = element_text(size=10), \n    panel.grid.minor = element_blank()\n    ) +\n  geom_point(data=Freshmen, aes(x=Att, y=Yards), color=\"red\") + \n  geom_text_repel(data=Freshmen, aes(x=`Att`, y=`Yards`, label = PlayerSeason))\n\n\nWarning: ggrepel: 115 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps\n\n\n\n\n\n\n\n\n\n\n\nCode\nggplot() + \n  geom_bar(\n    data=passing_av, \n    aes(x=Year,\n        weight= Total,\n        fill=Stat))\n\n\n\n\n\n\n\n\n\n\n\nCode\nggplot() + \n  geom_dumbbell(\n    data=passing_ratio, \n    aes(y=Year, x=Touchdowns, xend=Interceptions),\n    size = 2,\n    color = \"grey\",\n    colour_x = \"green\",\n    colour_xend = \"red\") + \n  theme_minimal()\n\n\nWarning: Using the `size` aesthetic with geom_segment was deprecated in ggplot2 3.4.0.\nℹ Please use the `linewidth` aesthetic instead."
  },
  {
    "objectID": "posts/introduction/index.html",
    "href": "posts/introduction/index.html",
    "title": "Introduction",
    "section": "",
    "text": "Howdy! My name is Taylor Kumm and I am a senior at the University of Nebraska - Lincoln. I am double majoring in Sports Media Communication and Advertising and Public Realtions."
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Latest Post",
    "section": "",
    "text": "What is Nebraska Football’s Ceiling with Freshman Quarterback at the Helm?\n\n\n\n\n\n\nlowercaseword\n\n\nlowercaseword\n\n\nlowercaseword\n\n\n\n\n\n\n\n\n\nApr 12, 2024\n\n\nTaylor Kumm\n\n\n\n\n\n\n\n\n\n\n\n\nPost With Code\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\nApr 1, 2024\n\n\nHarlow Malloc\n\n\n\n\n\n\n\n\n\n\n\n\nIntroduction\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nApr 1, 2024\n\n\nTaylor Kumm\n\n\n\n\n\n\n\n\n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\nMar 29, 2024\n\n\nTristan O’Malley\n\n\n\n\n\n\nNo matching items"
  }
]